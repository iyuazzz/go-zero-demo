// Code generated by goctl. DO NOT EDIT!
// Source: moment.proto

package momentclient

import (
	"context"

	"moment/rpc-model/moment-rpc/types/moment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateMomentReply   = moment.CreateMomentReply
	CreateMomentRequest = moment.CreateMomentRequest
	DelMomentReply      = moment.DelMomentReply
	DelMomentRequest    = moment.DelMomentRequest
	GetMomentReply      = moment.GetMomentReply
	GetMomentRequest    = moment.GetMomentRequest

	Moment interface {
		CreateMoment(ctx context.Context, in *CreateMomentRequest, opts ...grpc.CallOption) (*CreateMomentReply, error)
		GetMoment(ctx context.Context, in *GetMomentRequest, opts ...grpc.CallOption) (*GetMomentReply, error)
		DelMoment(ctx context.Context, in *DelMomentRequest, opts ...grpc.CallOption) (*DelMomentReply, error)
	}

	defaultMoment struct {
		cli zrpc.Client
	}
)

func NewMoment(cli zrpc.Client) Moment {
	return &defaultMoment{
		cli: cli,
	}
}

func (m *defaultMoment) CreateMoment(ctx context.Context, in *CreateMomentRequest, opts ...grpc.CallOption) (*CreateMomentReply, error) {
	client := moment.NewMomentClient(m.cli.Conn())
	return client.CreateMoment(ctx, in, opts...)
}

func (m *defaultMoment) GetMoment(ctx context.Context, in *GetMomentRequest, opts ...grpc.CallOption) (*GetMomentReply, error) {
	client := moment.NewMomentClient(m.cli.Conn())
	return client.GetMoment(ctx, in, opts...)
}

func (m *defaultMoment) DelMoment(ctx context.Context, in *DelMomentRequest, opts ...grpc.CallOption) (*DelMomentReply, error) {
	client := moment.NewMomentClient(m.cli.Conn())
	return client.DelMoment(ctx, in, opts...)
}
